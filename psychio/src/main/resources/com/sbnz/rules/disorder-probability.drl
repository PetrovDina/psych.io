package com.sbnz.rules;

import com.sbnz.psychio.model.Examination;
import com.sbnz.psychio.model.DisorderGroupProbability;
import com.sbnz.psychio.model.StatementResponse;
import com.sbnz.psychio.model.DiagnosisProbability;
import com.sbnz.psychio.model.SubstanceGroup;

import com.sbnz.psychio.model.enums.DisorderGroupName;
import com.sbnz.psychio.model.enums.Response;
import com.sbnz.psychio.model.enums.SubstanceGroupName;
import com.sbnz.psychio.model.enums.MaritalStatus;
import com.sbnz.psychio.model.enums.EmploymentStatus;


rule "Test"
    no-loop
    agenda-group "diagnosis-probability"
    when
        $examination : Examination(statementsAnswered == true)
    then
        //create diagnosis
        //System.out.println("Update works!");   
end



rule "Anorexia rule" salience 4
    lock-on-active
    agenda-group "diagnosis-probability"
	when
	    $examination : Examination(bmi < 16, bmi > 0, statementsAnswered == true, $statementResponses : statementResponses) 
		$disorderGroupProbability : DisorderGroupProbability(examination.id == $examination.id, disorderGroup.name == DisorderGroupName.EATING_DISORDERS)
	    $diagnosis : Diagnosis(disorderGroup.id == $disorderGroupProbability.disorderGroup.id, id == 7)
	    Double($score: this, this >= $diagnosis.getMinimumScore()) from accumulate(
            StatementResponse($statementResponse : this, $diagnosis.isStatementOccurent(statement)) from $statementResponses,
            sum(Response.getResponseValue($statementResponse.getResponse()) * $diagnosis.getStatementOccurence($statementResponse.getStatement()) * 1.0)
        )


    then
		//create diagnosis
		System.out.println("Anorexia predicted");	
		System.out.println("-----DIAGNOSING: " + $diagnosis.getName());
        DiagnosisProbability $prob = new DiagnosisProbability();
        $prob.setDiagnosis($diagnosis);
        $prob.setExamination($examination);
        $prob.setProbability($score / $diagnosis.getMaxScore() * 100.0);

        insert($prob);
end




rule "Bulimia rule" salience 4
    lock-on-active
    agenda-group "diagnosis-probability"
	when
		$examination : Examination(bmi >= 16, statementsAnswered == true, $statementResponses : statementResponses)
        $disorderGroupProbability : DisorderGroupProbability(examination.id == $examination.id, disorderGroup.name == DisorderGroupName.EATING_DISORDERS)
        $diagnosis : Diagnosis(disorderGroup.id == $disorderGroupProbability.disorderGroup.id, id == 8)
        Double($score: this, this >= $diagnosis.getMinimumScore()) from accumulate(
            StatementResponse($statementResponse : this, $diagnosis.isStatementOccurent(statement)) from $statementResponses,
            sum(Response.getResponseValue($statementResponse.getResponse()) * $diagnosis.getStatementOccurence($statementResponse.getStatement()) * 1.0)
        )
	then
		System.out.println("Bulimia predicted");
        //create diagnosis
        System.out.println("-----DIAGNOSING: " + $diagnosis.getName());
        DiagnosisProbability $prob = new DiagnosisProbability();
        $prob.setDiagnosis($diagnosis);
        $prob.setExamination($examination);
        $prob.setProbability($score / $diagnosis.getMaxScore() * 100.0);

        insert($prob);

end



//TODO: NOT TESTED, ONLY WRITTEN
//TODO -> ADD MUTUAL EXCLUSION?? SALIENCE -> https://github.com/Andjelaaa/SBNZ-primer/blob/main/src/main/resources/cdss_simpler/ZaOcenu7.drl
//Check if logic with negative Response enum values works
rule "Concrete non eating disorders prediction rule" salience 4
    lock-on-active
    agenda-group "diagnosis-probability"
    when
        $examination : Examination($statementResponses : statementResponses, statementsAnswered == true)
        $disorderGroupProbability : DisorderGroupProbability(examination.id == $examination.id, disorderGroup.name != DisorderGroupName.EATING_DISORDERS)
        $diagnosis : Diagnosis(disorderGroup.id == $disorderGroupProbability.disorderGroup.id)
        Double($score: this, this >= $diagnosis.getMinimumScore()) from accumulate(
        	StatementResponse($statementResponse : this, $diagnosis.isStatementOccurent(statement)) from $statementResponses,
        	sum(Response.getResponseValue($statementResponse.getResponse()) * $diagnosis.getStatementOccurence($statementResponse.getStatement()) * 1.0)
        )

    then
        System.out.println("-----DIAGNOSING: " + $diagnosis.getName());
        DiagnosisProbability $prob = new DiagnosisProbability();
		$prob.setDiagnosis($diagnosis);
		$prob.setExamination($examination);
		$prob.setProbability($score);

		insert($prob);

end


rule "Insert newly created DiagnosisProbability into Examination" salience 4
    no-loop
    agenda-group "diagnosis-probability"
    when 
        $examination : Examination($diagnosisProbabilities: diagnosisProbabilities)
        $diagnosisProbability : DiagnosisProbability(examination == $examination)
    then
        System.out.println("Adding diagnosis probability to examination: " + $diagnosisProbability.getProbability());
        $diagnosisProbabilities.add($diagnosisProbability);
        update($examination)
end


rule "Substances - Main Rule" salience 3
    no-loop
    agenda-group "diagnosis-probability"
    when
        $examination : Examination(statementsAnswered == true, $substances : substances)
        $diagnosisProbability : DiagnosisProbability(examination == $examination, $diagnosis : diagnosis)
        Double($score: this, $score >= 1.0) from accumulate(
            SubstanceGroup($substanceGroup : this, $diagnosis.isSubstanceOccurent(this)) from $substances,
            sum(1.0)
        )

    then
        $diagnosisProbability.setProbability($diagnosisProbability.getProbability() + $score);
        System.out.println("-----ADDING SUBSTANCE SCORE GENERAL RULE: " + $diagnosisProbability.getProbability());
end


rule "Substances - Bulimia & Anorexia" salience 2
    no-loop
    agenda-group "diagnosis-probability"
    when
        $examination : Examination(statementsAnswered == true, $substances : substances)
        $diagnosisProbability : DiagnosisProbability(examination == $examination, diagnosis.getId() == 7 || diagnosis.getId() == 8)
        $substanceGroup : SubstanceGroup(name == SubstanceGroupName.LAXATIVES || name == SubstanceGroupName.DIURETICS) from $substances

    then
        $diagnosisProbability.setProbability($diagnosisProbability.getProbability() + 5.0);
        System.out.println("-----ADDING SUBSTANCE SCORE FOR BULIMIA AND ANOREXIA: " + $diagnosisProbability.getProbability());
end


rule "Depression - Marital & Employment Status" salience 1
    no-loop
    agenda-group "diagnosis-probability"
    when
        $examination : Examination(statementsAnswered == true, patient.getMaritalStatus() != MaritalStatus.MARRIED || patient.getMaritalStatus() != MaritalStatus.SINGLE || patient.getEmploymentStatus() == EmploymentStatus.UNEMPLOYED)
        $diagnosisProbability : DiagnosisProbability(examination == $examination)
    then
        $diagnosisProbability.setProbability($diagnosisProbability.getProbability() + 1.0);
        System.out.println("-----ADDING SCORE FOR MARITAL AND EMPLOYMENT STATUS: " + $diagnosisProbability.getProbability());
end

